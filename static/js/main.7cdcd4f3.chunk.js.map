{"version":3,"sources":["ProjectComponents/HeaderBar.jsx","ProjectComponents/Navbar.jsx","ProjectComponents/FavoriteMovie.jsx","ProjectComponents/FavoriteBtn.jsx","ProjectComponents/MxPlayerCards.jsx","ProjectComponents/HeadingTitle.jsx","ProjectComponents/Home.js","ProjectComponents/TodoList/ViewListItems.js","ProjectComponents/TodoList/component/TaskComponent.jsx","ProjectComponents/TodoList/TodoMain.js","App.js","reportWebVitals.js","index.js"],"names":["HeaderBar","className","Navbar","props","class","href","type","id","to","target","placeholder","onChange","InputData","value","searchData","FavoriteMovie","useState","fav","setFav","console","log","handle","SData","a","data","FavoriteBtn","favbtn","setfav","onClick","fig2","FavList","MxPlayerCards","map","items","index","style","width","src","MImg","poster_path","alt","title","height","text","overview","popularity","release_date","vote_count","link","HeadingTitle","Home","SearchMovie","setSearchMovie","movieData","setMovieData","useEffect","getApiData","Img","fetch","response","json","results","MovieFilter","filter","Movie","toLowerCase","includes","event","TypedName","ViewListItems","viewList","date","name","Taskcomponent","list","GetCheckValue","UpdateItems","DeleteItems","toggleViewList","e","Date","getDate","toString","getMonth","getFullYear","TodoMain","ItemsName","setItemsName","upadteItemsId","setUpadteItemsId","AllItems","setAllItems","AllCheckValue","setAllCheckValue","AllUncheckCheckValue","setAllUncheckCheckValue","toggleButton","setToggleButton","setViewList","settoggleViewList","alluncheckeditems","item","isChecked","localStorage","setItem","JSON","stringify","getItem","JsonData","parse","handleAllCheckbox","document","getElementById","Swal","fire","ItemsData","getTime","preinventory","checked","checkedValue","Set","uncheckitems","ele","updateitem","updatedItem","deleteIndex","inventory","showDenyButton","showCancelButton","confirmButtonText","denyButtonText","then","result","isConfirmed","checkbox","getElementsByName","i","length","isDenied","clear","window","location","reload","App","path","component","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.7cdcd4f3.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SearchBar from \"./SearchBar\";\r\n\r\nconst HeaderBar = () => {\r\n  return (\r\n    <>\r\n      <h1 className=\"heading_style\">\r\n        Welcome to <span className=\"headingSub_style\">MX</span>\r\n        <span className=\"headingSub2_Style\">Player</span>\r\n      </h1>\r\n      \r\n      \r\n    </>\r\n  );\r\n};\r\n\r\nexport default HeaderBar;\r\n","import { render } from '@testing-library/react';\r\nimport React from 'react'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Navbar=(props)=>{\r\n    return(\r\n    <>\r\n <nav class=\"navbar navbar-expand-lg navbar-dark bg-light\">\r\n  <div class=\"container-fluid\">\r\n    <a class=\"navbar-brand\" href=\"#\">Mx Player</a>\r\n    <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span class=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n      <Link to=\"/anup_thakurwar\">\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n        </li>\r\n     </Link>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link\" href=\"https://www.mxplayer.in/web-series\" target=\"_blank\">WebSeries</a>\r\n        </li>\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link \" href=\"https://www.mxplayer.in/music\" target=\"_blank\" >Music</a>\r\n        </li>\r\n        <Link to=\"/favourite\">\r\n        <li class=\"nav-item\">\r\n          <a class=\"nav-link \" aria-current=\"page\" href=\"#\">Favourite</a>\r\n        </li>\r\n     </Link>\r\n      </ul>\r\n     \r\n      <form class=\"d-flex\">\r\n        <input class=\"form-control me-2\" type=\"search\" placeholder=\"Search Movies Here\" aria-label=\"Sizing example input\" aria-describedby=\"inputGroup-sizing-default\" onChange={props.InputData} value={props.searchData}/>\r\n       \r\n      </form>\r\n    </div>\r\n  </div>\r\n</nav>\r\n    </>\r\n    );\r\n}\r\n\r\nexport default Navbar;","import React, { useState } from \"react\";\r\nimport HeaderBar from \"./HeaderBar\";\r\nimport MxPlayerCards from \"./MxPlayerCards\";\r\nimport Navbar from \"./Navbar\";\r\n\r\nconst FavoriteMovie=(props)=>{\r\n    const [fav, setFav] = useState([]);\r\n    \r\n    const FavList = (SData) => {\r\n        const a = [...fav, SData];\r\n        // console.log(movie)\r\n        setFav(a);   \r\n        }\r\n          console.log(fav)\r\n    return(\r\n        <>  \r\n                 <Navbar />\r\n                 <HeaderBar />\r\n                <MxPlayerCards handle={FavList} data={fav}/>\r\n               \r\n        </>\r\n    )\r\n}\r\nexport default FavoriteMovie;","import React,{useState} from \"react\";\r\nimport FavoriteMovie from \"./FavoriteMovie\";\r\nimport HeaderBar from \"./HeaderBar\";\r\nimport MxPlayerCards from \"./MxPlayerCards\";\r\n\r\nconst FavoriteBtn = (props) => {\r\n  \r\n //for favorite movies\r\n  \r\n  const [favbtn, setfav] = useState([]);\r\n  // const fig = props.fav\r\n  // console.log(fig)\r\n  // const fagh = props.favItem\r\n  // console.log(fagh)\r\n  \r\n  //  on Click Event \r\n  const FavList = (fig2) => { \r\n    const a = [...favbtn, fig2];  \r\n    setfav(a)\r\n    console.log(fig2)\r\n    }\r\n    \r\n  console.log(favbtn)\r\n  return (\r\n    <>\r\n        <FavoriteMovie fav = {favbtn}/>\r\n        <button onClick={()=>{FavList(props.fav)}}>My Favorite</button>\r\n        {/* <MxPlayerCards data = {favbtn}/> */}\r\n      \r\n    </>\r\n  );\r\n\r\n}\r\nexport default FavoriteBtn;\r\n","import React, {useState} from 'react';\r\nimport FavoriteBtn from './FavoriteBtn';\r\nimport FavoriteMovie from './FavoriteMovie';\r\nimport HeaderBar from './HeaderBar';\r\nimport \"./MxPlayer.css\";\r\nimport SearchBar from './SearchBar';\r\nimport ReadMoreReact from 'read-more-react';\r\n\r\n\r\n\r\nconst MxPlayerCards=(props)=>{\r\n     \r\nreturn(\r\n  <>\r\n  <div className =\"scrollMenu\">\r\n  {props.data.map((items,index)=>{\r\n    return (\r\n      <>\r\n          <div className=\"container\" style={{ width: \"30rem\" }} key={index}>\r\n            <div className=\"row\">\r\n              <div className=\"col-sm\">\r\n              {/* <div className=\"card-deck\" > */}\r\n                <div className=\"card\" key={index}>\r\n                  <div>\r\n                  <img\r\n                    src={props.MImg+items.poster_path}\r\n                    alt=\"webseries\"\r\n                    className=\"card-img-top\" \r\n                  />\r\n                  </div>\r\n                  <div >\r\n                    <h2 className=\"card-title\">{items.title} </h2>\r\n                  </div>  \r\n                  <div height=\"100px\">\r\n                 <h3 className=\"card-text\"><ReadMoreReact  text={items.overview}  /></h3>   \r\n                  </div>\r\n                  <div>\r\n                    <h3 className=\"card-text\">popularity: {items.popularity} </h3>\r\n                  </div>\r\n                  <div>\r\n                    <h3 className=\"card-text\"> Release Date: {items.release_date} </h3>\r\n                  </div>\r\n                  <div>\r\n                    <h3 className=\"card-text\">Vote Count: {items.vote_count} </h3>\r\n                  </div>\r\n                    <button href={items.link} target=\"_Blank\" type=\"button\" className=\"btn btn-outline-success\">\r\n                      Watch Now\r\n                    </button>\r\n              \r\n                \r\n                    {/* <button onClick={()=>{props.fav(items)}}>My Favorite</button> */}\r\n                    <button \r\n                      type=\"button\"\r\n                      className=\"btn btn-outline-danger\"\r\n                      onClick={() => {\r\n                        props.handle(items);\r\n                      }}\r\n                    >\r\n                      My Favorite\r\n                    </button>\r\n                      </div>\r\n                      {/* </div> */}\r\n                </div>\r\n              </div>\r\n           </div>\r\n      </>\r\n    );})}\r\n \r\n  </div>\r\n  </>\r\n); \r\n\r\n\r\n\r\n\r\n \r\n\r\n\r\n\r\n\r\n\r\n\r\n// return(\r\n//       <>\r\n      \r\n//       <div className=\"cards\">\r\n//         <div className=\"card\">\r\n//             <img src={items.imgsrc} alt=\"webseries\" className=\"card_img\"/>\r\n//             <div className=\"card_info\">\r\n//                 <span className=\"card_title\">{items.title}</span>\r\n//                 <h3 className=\"card_sabout\">{items.sabout}</h3>\r\n//             </div>\r\n//             <a href = {items.link} target=\"_Blank\">\r\n//                     <button>Watch Now</button>\r\n//              </a>\r\n//              <button onClick={items.data}>My Favorite</button>\r\n//         </div>\r\n//       </div>\r\n        \r\n//       </>\r\n//   );  \r\n}\r\n\r\nexport default MxPlayerCards; ","import React from \"react\";\r\n\r\nconst HeadingTitle=(props)=>{\r\n    return(\r\n        <>\r\n            <h1 className=\"headingSub4_style\">{props.title}</h1>\r\n        </>   \r\n     )\r\n}\r\n\r\nexport default HeadingTitle;","import React, { useEffect, useState } from \"react\";\r\nimport SData from \"./MxPlayerData\";\r\nimport MxPlayerCards from \"./MxPlayerCards\";\r\nimport HeaderBar from \"./HeaderBar\";\r\nimport SearchBar from \"./SearchBar\";\r\nimport HeadingTitle from \"./HeadingTitle\";\r\nimport Navbar from \"./Navbar\";\r\nimport Corosuel from \"./Corosuel\";\r\nimport FavoriteMovie from \"./FavoriteMovie\";\r\n\r\nconst Home = () => {\r\n  // //for favorite movies\r\n  // const [fav, setfav] = useState([]);\r\n  //used for Filter\r\n  const [SearchMovie, setSearchMovie] = useState(\"\");\r\n  const [fav, setFav] = useState([]);\r\n  const [movieData, setMovieData] = useState([]);\r\n\r\n  // //  for Object Callback\r\n  // const FavList = (movie) => {\r\n  //   const a = [...fav, movie];\r\n  //   // console.log(movie)\r\n  //   setfav(a);\r\n  //   }\r\n\r\n  //for Input Event\r\n  const InputEvent = (event) => {\r\n    const TypedName = event.target.value;\r\n    setSearchMovie(TypedName);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getApiData();\r\n  }, []);\r\n\r\n  const Img = `https://image.tmdb.org/t/p/w500`;\r\n  const getApiData = async () => {\r\n    const response = await fetch(\r\n      \"https://api.themoviedb.org/3/movie/popular?api_key=844dba0bfd8f3a4f3799f6130ef9e335&language=en-US&page=1\"\r\n    );\r\n    const data = await response.json();\r\n    //  console.log(data.results)\r\n    setMovieData(data.results);\r\n  };\r\n  // console.log(movieData)\r\n  //for filtering the data (Movie is just argument to acess data inside it)\r\n  const MovieFilter = movieData.filter((Movie) => {\r\n    if (SearchMovie === \"\") {\r\n      return Movie;\r\n    } else if (Movie.title.toLowerCase().includes(SearchMovie.toLowerCase())) {\r\n      // console.log(\r\n      //   Movie.title.toLowerCase().includes(SearchMovie.toLowerCase())\r\n      // );\r\n      return Movie;\r\n    }\r\n  });\r\n  // for adding fovorite\r\n  const FavList = (SData) => {\r\n    const a = [...fav, SData];\r\n    // console.log(movie)\r\n    setFav(a);\r\n  };\r\n  // console.log(fav);\r\n  return (\r\n    <>\r\n      <Navbar searchData={SearchMovie} InputData={InputEvent} />\r\n\r\n      {/* <HeaderBar/> */}\r\n      <hr />\r\n      <HeadingTitle title=\"Movies\" />\r\n      {/* <SearchBar searchData={SearchMovie} InputData={InputEvent} /> */}\r\n      <MxPlayerCards data={MovieFilter} handle={FavList} MImg={Img} />\r\n\r\n      <HeadingTitle title=\"Favorite\" />\r\n      <hr />\r\n      <MxPlayerCards data={fav} MImg={Img} />\r\n    </>\r\n  );\r\n};\r\nexport default Home;\r\n","import React from \"react\";\r\n\r\nconst ViewListItems = ({ viewList }) => {\r\n  return (\r\n    <div>\r\n      {viewList?.map((items) => {\r\n        return (\r\n          <>\r\n            <div className=\"row\">\r\n              <div className=\"col\">\r\n                <ol>\r\n                  <li className=\"text-dark \" key={items.id}>\r\n                    <div className=\"col-6 d-flex justify-content-center align-items-center text-dark content_font\">\r\n                      {items.date}\r\n                    </div>\r\n                    <div className=\"col-6 text-dark content_font\">\r\n                      {items.name}\r\n                    </div>\r\n                  </li>\r\n                </ol>\r\n              </div>\r\n            </div>\r\n          </>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\nexport default ViewListItems;\r\n","import React from \"react\";\r\nimport ViewListItems from \"../ViewListItems\";\r\n\r\nconst Taskcomponent = ({viewList,list,GetCheckValue,UpdateItems,DeleteItems,toggleViewList,name}) => {\r\n\r\n    return (\r\n        <>\r\n          <ol>\r\n              {!toggleViewList ? (\r\n                list.map((items) => {\r\n                  return (\r\n                    <>\r\n                      <div className=\"d-flex justify-content-start\">\r\n                        <div className=\"col-2 content_font\">\r\n                          <input\r\n                            type=\"checkbox\" \r\n                            name= {name}\r\n                            onClick={(e) => {\r\n                              GetCheckValue(items, e);\r\n                            }}\r\n                          />\r\n                        </div>\r\n                        <div className=\"col-8 content_font\">\r\n                       \r\n                          <li className=\"text-dark h5 text-break align-items-center \" key={items.id}>\r\n                            {items.name} \r\n                          </li>\r\n                         <li  className=\"text-dark h5  \" >\r\n                         {new Date().getDate().toString()+ \"/\" + new Date().getMonth().toString() +\"/\" + new Date().getFullYear().toString()}\r\n                         </li>\r\n                        </div>\r\n                        <div className=\"col-2 content_font align-items-center\">\r\n                          <i\r\n                            className=\"fa fa-highlighter text-warning bg-transparent\"\r\n                            onClick={() => {\r\n                              UpdateItems(items);\r\n                            }}\r\n                          ></i>\r\n                          &nbsp;\r\n                          <i\r\n                            className=\"fa fa-trash text-danger bg-transparent\"\r\n                            onClick={() => {\r\n                              DeleteItems(items);\r\n                            }}\r\n                          ></i>\r\n                        </div>\r\n                      </div>\r\n                    </>\r\n                  );\r\n                })\r\n              ) : (\r\n                <ViewListItems viewList={viewList} />\r\n              )}\r\n            </ol>\r\n        \r\n        </>\r\n    );\r\n\r\n\r\n}\r\n\r\nexport default Taskcomponent","import React, {  useEffect, useState } from \"react\";\r\nimport \"../../ProjectComponents/TodoList.css\";\r\nimport Swal from \"sweetalert2\";\r\nimport Taskcomponent from \"./component/TaskComponent\";\r\n\r\n\r\nconst TodoMain = () => {\r\n  const [ItemsName, setItemsName] = useState();\r\n  const [upadteItemsId, setUpadteItemsId] = useState();\r\n  const [AllItems, setAllItems] = useState([]);\r\n  const [AllCheckValue, setAllCheckValue] = useState([]);\r\n  const [AllUncheckCheckValue, setAllUncheckCheckValue] = useState(AllItems);\r\n  const [toggleButton, setToggleButton] = useState(true);\r\n  const [viewList, setViewList] = useState([]);\r\n  const[toggleViewList, settoggleViewList] = useState(false);\r\n\r\n\r\n\r\n\r\n\r\n\r\n  const AddItems = () => {\r\n     if(validation()){\r\n      const ItemsData = {\r\n        id: new Date().getTime().toString(),\r\n        name: ItemsName,\r\n        date: new Date().getDate().toString()+ \"/\" + new Date().getMonth().toString() +\"/\" + new Date().getFullYear().toString(),\r\n      };\r\n  \r\n      if (toggleButton) {\r\n        setAllItems((preinventory) => {\r\n          return [...preinventory, ItemsData];\r\n        });\r\n        setItemsName(\"\");\r\n        \r\n      } else if (ItemsName && !toggleButton) {\r\n        // console.log(\"hello\");\r\n        setAllItems(\r\n          AllItems.map((item) => {\r\n            if (item.id == upadteItemsId) {\r\n              return { ...item, name: ItemsName };\r\n            }\r\n            return item;\r\n          })\r\n        );\r\n        setToggleButton(true);\r\n        setItemsName(\"\");\r\n       \r\n      } else if (!ItemsName) {\r\n        Swal.fire('please fill the input')\r\n      }\r\n    \r\n     }else{\r\n      console.log(\"validation cancelled\")\r\n     }\r\n   \r\n  };\r\n\r\n  const DeleteItems = (items) => {\r\n    let deleteIndex = items.id;\r\n    // console.log(\"deleteIndex\", deleteIndex);\r\n    setAllItems((inventory) => {\r\n      return inventory.filter((ele) => {\r\n        return ele.id !== deleteIndex;\r\n      });\r\n    });\r\n\r\n   \r\n  };\r\n\r\n  const UpdateItems = (updateitem) => {\r\n    // console.log(\"updateIndex\", updateitem);\r\n    setToggleButton(false);\r\n    const updatedItem = AllItems.filter((item) => {\r\n      return item.id == updateitem.id;\r\n    });\r\n    console.log(updatedItem);\r\n    setItemsName(updatedItem[0].name);\r\n    setUpadteItemsId(updatedItem[0].id);\r\n  };\r\n\r\n  const ResetList = () =>{\r\n  //  setAllItems([])\r\n  //  setAllUncheckCheckValue([])\r\n  //  localStorage.removeItem(\"AllcheckedData\")\r\n    \r\n  Swal.fire({\r\n    title: 'Do you want to Reset the changes?',\r\n    showDenyButton: true,\r\n    showCancelButton: true,\r\n    confirmButtonText: 'reset',\r\n    denyButtonText: `Don't Reset`,\r\n  }).then((result) => {\r\n    /* Read more about isConfirmed, isDenied below */\r\n    if (result.isConfirmed) {\r\n      const checkbox = document.getElementsByName(\"element\")\r\n      for(let i=0; i<AllItems.length;i++){\r\n          if(checkbox[i].checked == true ){\r\n            checkbox[i].checked = false;\r\n      }\r\n   };\r\n      Swal.fire('Reset suceessfully!', '', 'success')\r\n    } else if (result.isDenied) {\r\n      Swal.fire('Changes are not saved', '', 'info')\r\n    }\r\n  })\r\n  \r\n  }\r\n\r\n  const DeleteList = () =>{\r\n\r\n      Swal.fire({\r\n        title: 'Do you want to delete the changes?',\r\n        showDenyButton: true,\r\n        showCancelButton: true,\r\n        confirmButtonText: 'delete',\r\n        denyButtonText: `Don't delete`,\r\n      }).then((result) => {\r\n        /* Read more about isConfirmed, isDenied below */\r\n        if (result.isConfirmed) {\r\n            localStorage.clear(\"AllcheckedData\")\r\n            window.location.reload();\r\n          Swal.fire('deleted suceessfully!', '', 'success')\r\n        } else if (result.isDenied) {\r\n          Swal.fire('Changes are not saved', '', 'info')\r\n        }\r\n      })\r\n   \r\n  }\r\n\r\n  const SaveList = ()=>{\r\n   \r\n    Swal.fire({\r\n        title: 'Do you want to save the changes?',\r\n        showDenyButton: true,\r\n        showCancelButton: true,\r\n        confirmButtonText: 'save',\r\n        denyButtonText: `Don't save`,\r\n      }).then((result) => {\r\n        /* Read more about isConfirmed, isDenied below */\r\n        if (result.isConfirmed) {\r\n         \r\n            localStorage.setItem(\"AllcheckedData\",JSON.stringify(AllCheckValue));\r\n          Swal.fire('saved suceessfully!', '', 'success')\r\n        } else if (result.isDenied) {\r\n          Swal.fire('Changes are not saved', '', 'info')\r\n        }\r\n      })\r\n  \r\n\r\n  }\r\n\r\n\r\n\r\n//   console.log(viewListToggle);\r\n  const GetCheckValue = (items,e)=>{\r\n // all the checked values\r\n\r\n    e.target.checked ? (\r\n    \r\n      \r\n    setAllCheckValue((checkedValue)=>{\r\n      items.isChecked = 1  \r\n      const data = [...checkedValue,items]\r\n       \r\n        return [...new Set(data)]\r\n    })) : \r\n     setAllCheckValue((uncheckitems) => {\r\n      items.isChecked = 0\r\n        return uncheckitems.filter((ele) => {\r\n          return ele.id !== items.id;\r\n        });\r\n      });\r\n\r\n    \r\n}\r\n\r\n\r\nuseEffect(()=>{\r\n  console.log(\"hello\")\r\n  const alluncheckeditems = AllItems.filter((item)=>{\r\n    if(item.isChecked !== 1){\r\n      return item\r\n    }\r\n  })\r\n  \r\n  setAllUncheckCheckValue(alluncheckeditems)\r\n},[AllCheckValue])\r\n\r\nuseEffect(()=>{\r\n  localStorage.setItem(\"AllItem\",JSON.stringify(AllItems));\r\n  setAllUncheckCheckValue(AllItems)\r\n},[AllItems])\r\n\r\n\r\nconst handleClickViewList = () => {\r\n    const data = localStorage.getItem(\"AllcheckedData\")\r\n    const JsonData = JSON.parse(data);\r\n    setViewList(JsonData);\r\n    settoggleViewList(true)\r\n}\r\n\r\nconst GoBack=(e)=>{\r\n  settoggleViewList(false)         \r\n  setAllItems(AllUncheckCheckValue)\r\n}\r\n\r\nconst handleAllCheckbox = (e) => {\r\n    \r\n      const data = localStorage.getItem(\"AllcheckedData\")\r\n      const JsonData = JSON.parse(data);\r\n      setViewList(JsonData);\r\n      settoggleViewList(true)      \r\n}\r\n\r\nfunction validation(){\r\n  console.log(\"hello\")\r\n  const x = document.getElementById(\"inputbox\")\r\n  if (x.value == \"\") {\r\n    Swal.fire('please put any task')\r\n    return false;\r\n  }else{\r\n    return true;\r\n  }\r\n}\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"containers \">\r\n        <div className=\"row bg-light gx-0\">\r\n          <div className=\"content_back col-12 \">\r\n          {toggleViewList ? (\r\n              <>\r\n                <div className=\"row d-flex\">\r\n                  <div className=\"col-2 d-flex justify-content-center align-items-center \">\r\n              \r\n                    <input type=\"checkbox\" className=\"text-light \" value=\"pendingTask\" onClick={(e)=>GoBack(e)}/>\r\n                    <span><label className=\"text-light font2 \">Go to Pending Task</label></span>\r\n                  </div>\r\n                  <div className=\"col-10 \">\r\n                    <h2 className=\"font1 text-light d-flex justify-content-center\">\r\n                      Completed Tasks\r\n                    </h2>\r\n                  </div>\r\n                </div>\r\n              </>\r\n            ) : (\r\n              <>\r\n               <div className=\"row d-flex\">\r\n               <div className=\"col-2 d-flex justify-content-center align-items-center \">\r\n           \r\n               <input type=\"checkbox\" className=\"text-light \" value=\"completeTask\" onClick={(e)=>handleAllCheckbox(e)}/>\r\n                    <span><label className=\"text-light font2\">Go to complete Task</label></span>\r\n                  </div>\r\n                  <div className=\"col-10 \">\r\n                <h1 className=\"text-light font1\">TodoList</h1>\r\n                </div>\r\n                </div>\r\n                <div className=\"d-flex\">\r\n                  <div className=\"col-2 content_font\">\r\n                  </div>\r\n                  <div className=\"col-8 content_font\">\r\n                    <input\r\n                     id=\"inputbox\"\r\n                      className=\"bg-transparent border border-0\"\r\n                      onChange={(e) => {\r\n                        setItemsName(e.target.value);\r\n                      }}\r\n                      value={ItemsName}\r\n                      placeholder=\"Add Your Task\"\r\n                      \r\n                    />\r\n                  </div>\r\n                  <div className=\"col-2 content_font\">\r\n                    <button\r\n                      className=\"bg-transparent btn_Add\"\r\n                      type=\"button\"\r\n                  \r\n                      onClick={AddItems}\r\n                    >\r\n                      {toggleButton ? (\r\n                        <i class=\"fa fa-circle-plus text-warning bg-transparent fs-1 \"></i>\r\n                      ) : (\r\n                        <i class=\"fa fa-highlighter text-warning bg-transparent fs-1 \"></i>\r\n                      )}\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n                <hr />\r\n              </>\r\n            )} \r\n\r\n     \r\n         <Taskcomponent\r\n           toggleViewList={toggleViewList}\r\n           viewList = {viewList}\r\n           list = {  AllItems  }\r\n           GetCheckValue = {GetCheckValue}\r\n           UpdateItems = {UpdateItems}\r\n           DeleteItems = {DeleteItems}\r\n           name = \"element\"\r\n           /> \r\n        \r\n\r\n          </div>\r\n        </div>\r\n        <div className=\"d-flex justify-content-center \">\r\n          <button\r\n            className=\"bg-success btn btn-success content_font px-2 \"\r\n            onClick={ResetList}\r\n          >\r\n            Reset\r\n            <br /> List\r\n          </button>\r\n          <button\r\n            className=\"bg-success btn btn-success content_font\"\r\n            onClick={DeleteList}\r\n          >\r\n            Delete\r\n            <br />\r\n            List\r\n          </button>\r\n          <button\r\n            className=\"bg-success btn btn-success content_font\"\r\n            onClick={SaveList}\r\n          >\r\n            Save as\r\n            <br />\r\n            Completed\r\n          </button>\r\n          <button\r\n            className=\"bg-success btn btn-success content_font\"\r\n            onClick={handleClickViewList}\r\n          >\r\n            view\r\n            <br />\r\n            List\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default TodoMain;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport \"./ProjectComponents/MxPlayer.css\";\r\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport Home from \"./ProjectComponents/Home\";\r\nimport FavoriteMovie from \"./ProjectComponents/FavoriteBtn\";\r\nimport TodoMain from \"./ProjectComponents/TodoList/TodoMain\";\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Switch>\r\n        <Route path=\"/todo\" component={TodoMain} />\r\n        <Route exact path=\"/anup_thakurwar\" component={Home} />\r\n        <Route path=\"/favourite\" component={FavoriteMovie} />\r\n        \r\n      </Switch>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\nimport Routes from \"./ProjectComponents/Home\";\r\n\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}